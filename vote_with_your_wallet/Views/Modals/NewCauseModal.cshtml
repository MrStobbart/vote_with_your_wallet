@using vote_with_your_wallet.Models
@model NewCauseViewModel
@{
    ViewBag.Title = "NewCauseModal";
}

<div class="modal fade" id="new-cause-modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Create a new caue</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            @using (Html.BeginForm("Create", "Causes", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    @Html.ValidationSummary("", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(Model => Model.Title)
                        @Html.TextBoxFor(Model => Model.Title, new { @class = "form-control", placeholder = "What do you want to archieve?" })
                        @Html.ValidationMessageFor(Model => Model.Title, "", new { @class = "invalid-feedback" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(Model => Model.CauseTarget)
                        @Html.TextBoxFor(Model => Model.CauseTarget, new { @class = "form-control", placeholder = "Who can make this happen?" })
                        @Html.ValidationMessageFor(Model => Model.CauseTarget, "", new { @class = "invalid-feedback" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(Model => Model.Description)
                        @Html.TextAreaFor(Model => Model.Description, 10, 55, new { @class = "form-control", placeholder = "Describe the goals and challenges of the cause" })
                        @Html.ValidationMessageFor(Model => Model.Description, "", new { @class = "invalid-feedback" })
                    </div>
                 </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save new cause</button>
                </div>
            
            }
        </div>
    </div>
</div>

<script>
    @if (Model.Title != null || Model.Description != null || Model.CauseTarget != null)
    {
        @:window.onload = function () { $('#new-cause-modal').modal('show') }
    }
</script>